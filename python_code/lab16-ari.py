#filename: lab16-ari.py
#author: Zachary McBride

# Lab: Compute Automated Readability Index
# Let's compute the ARI for a given book. The automated readability 
# index (ARI) is a formula for computing the U.S. grade level for a 
# given block of text. The general formula to compute the ARI is as 
# follows:

# ARI = 4.71(chars/words) + 0.5(words/sentences) - 21.43

import re
import requests
import string

# get text to be analyzed: in this case, Great Expectations
text_request = requests.get("http://www.gutenberg.org/files/1400/1400-0.txt")
text = text_request.text

# test code with known output:
# text = """I am Zach. My life is fun!
# I'm not sure, but running regular expressions is tough in
# the beginning. It is getting easier though."""

ari_scale = {
     1: {'ages':   '5-6', 'grade_level': 'Kindergarten'},
     2: {'ages':   '6-7', 'grade_level':    '1st Grade'},
     3: {'ages':   '7-8', 'grade_level':    '2nd Grade'},
     4: {'ages':   '8-9', 'grade_level':    '3rd Grade'},
     5: {'ages':  '9-10', 'grade_level':    '4th Grade'},
     6: {'ages': '10-11', 'grade_level':    '5th Grade'},
     7: {'ages': '11-12', 'grade_level':    '6th Grade'},
     8: {'ages': '12-13', 'grade_level':    '7th Grade'},
     9: {'ages': '13-14', 'grade_level':    '8th Grade'},
    10: {'ages': '14-15', 'grade_level':    '9th Grade'},
    11: {'ages': '15-16', 'grade_level':   '10th Grade'},
    12: {'ages': '16-17', 'grade_level':   '11th Grade'},
    13: {'ages': '17-18', 'grade_level':   '12th Grade'},
    14: {'ages': '18-22', 'grade_level':      'College'}
}

# massage data, get rid of pre-fix generated by Project Gutenberg
list_text = text.split('\n')
pos_of_prefix = list_text.index("*** START OF THIS PROJECT GUTENBERG EBOOK GREAT EXPECTATIONS ***\r")
pos_of_postfix = list_text.index("End of the Project Gutenberg EBook of Great Expectations, by Charles Dickens\r")
list_text = list_text[pos_of_prefix + 1:pos_of_postfix - 1]
text = '\n'.join(list_text)
# print(text_of_sentances)


def ari(text):
    text_of_chars = re.split(r'\w', text) #with test text, 99
    text_of_words = re.split(r'\s', text) #with test text, 24
    text_of_sentances = re.split(r"[\.!]\s|\?[\"\s]", text) #with test text, 4
    chars = len(text_of_chars)
    words = len(text_of_words)
    sents = len(text_of_sentances)
    print(f"""The number of chars in the book is {str(chars)},
    The number of words in the book is {str(words)},
    The number of sentances in the book is {str(sents)}.
    """)
    return 4.71 * (chars/words) + 0.5 * (words/sents) - 21.43

ari_of_text = round(ari(text))
ari_info_of_text = ari_scale[ari_of_text]
print(f"The ARI of the text is: {ari_of_text}.")
print(f"The appropriate age for reading this text is: {ari_info_of_text['ages']}, the appropriate grade level for this text is: {ari_info_of_text['grade_level']}.")